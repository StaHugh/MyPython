单元测试

重要概念：
----------------------------------------------
1.测试夹具：	表示执行一个或多个测试以及任何关联的清除操作所需的准备工作。
这可能涉及例如创建临时或代理数据库，目录或启动服务器进程。
2.测试用例：	是测试的单独单元。它检查对特定输入集合的特定响应。
unittest提供了一个基类，TestCase，可用于创建新的测试用例。
3.测试套件：	是测试用例，测试套件或两者的容器。它用于聚合应该一起执行的测试。
4.测试运行器：	是协调测试执行并向用户提供结果的组件。运行器可以使用图形界面，文本界面，或返回特定值来指示执行测试的结果。

-------------------------------------------------
每个测试的关键是调用assertEqual()来检查预期结果； 
assertTrue()或assertFalse()来验证条件；
或assertRaises()来验证是否引发了特定异常。
使用这些方法代替assert语句，以便测试运行程序可以累积所有测试结果并生成报告。
setUp()和tearDown()方法允许您定义将在每个测试方法之前和之后执行的指令
unittest.main()提供了测试脚本的命令行界面。
将-v选项传递到测试脚本将指示unittest.main()启用更高级别的冗长.

支持的命令行选项：
-b, --buffer
    标准输出和标准错误流在测试运行期间进行缓冲。丢弃通过测试期间的输出。输出在测试失败或错误时正常回显，并添加到失败消息中。

-c, --catch
    Control-C在测试运行期间等待当前测试结束，然后报告所有结果。第二个Control-C引发正常的KeyboardInterrupt异常。

-f, --failfast
    在第一个错误或故障时停止测试运​​行。

--locals
    在traceback中显示局部变量。